{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "NewEntry",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_oldHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_newHash",
          "type": "string"
        }
      ],
      "name": "AddData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FundContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "WithdrawFunds",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "submitters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Chat.sol"
  },
  "ast": {
    "absolutePath": "contracts/Chat.sol",
    "exportedSymbols": {
      "Unichat": [
        150
      ]
    },
    "id": 151,
    "license": "no",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Unichat",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 150,
        "linearizedBaseContracts": [
          150
        ],
        "name": "Unichat",
        "nameLocation": "67:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "FixedPaymentAmount",
            "nameLocation": "106:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "98:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "98:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "127:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "53447bb8",
            "id": 8,
            "mutability": "mutable",
            "name": "submitters",
            "nameLocation": "202:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "168:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "176:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "168:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "186:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 12,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "254:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 150,
            "src": "219:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "227:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "219:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "238:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "d48b1b4ce5d3dbfe01fb33b790a3fdf8d70ea1c364da6e19adcefbaddbc41fff",
            "id": 16,
            "name": "NewEntry",
            "nameLocation": "289:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "305:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "298:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "297:14:0"
            },
            "src": "283:29:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "437:123:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "455:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "455:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24,
                          "name": "FixedPaymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "468:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "455:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 21,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "447:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "447:40:0"
                },
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28,
                        "name": "submitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "498:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 30,
                      "indexExpression": {
                        "hexValue": "696e697469616c",
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "509:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a45f9295543d5f05ec814185433a730473e986936cc4b3de451dc585eeba68d1",
                          "typeString": "literal_string \"initial\""
                        },
                        "value": "initial"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "498:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 31,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "522:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "522:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "498:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "498:34:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "549:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 20,
                  "id": 36,
                  "nodeType": "Return",
                  "src": "542:11:0"
                }
              ]
            },
            "functionSelector": "8ed8067e",
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "FundContract",
            "nameLocation": "393:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:2:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "431:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:6:0"
            },
            "scope": 150,
            "src": "384:176:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "669:763:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "expression": {
                                "id": 48,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "697:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "697:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 50,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "696:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 51,
                          "name": "FixedPaymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "711:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "696:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204554482073656e7420746f207374616b652e",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "731:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b36721733b4b0c891d613d16e1cf312338241e7a5efdca2844c80af95b123112",
                          "typeString": "literal_string \"Not enough ETH sent to stake.\""
                        },
                        "value": "Not enough ETH sent to stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b36721733b4b0c891d613d16e1cf312338241e7a5efdca2844c80af95b123112",
                          "typeString": "literal_string \"Not enough ETH sent to stake.\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "688:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "688:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "688:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes20",
                          "typeString": "bytes20"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 59,
                                "name": "submitters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "789:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                  "typeString": "mapping(string memory => address)"
                                }
                              },
                              "id": 61,
                              "indexExpression": {
                                "id": 60,
                                "name": "_oldHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "800:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "789:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "781:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 57,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "781:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "781:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "814:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "781:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e6f74686572206861736820686173206265656e207375626d697474656420627920616e6f74686572206e6f64652e",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "817:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffc80391ac7458336b241e12477a850e742dcb941fb9bbbec0e7efc3582d9680",
                          "typeString": "literal_string \"Another hash has been submitted by another node.\""
                        },
                        "value": "Another hash has been submitted by another node."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffc80391ac7458336b241e12477a850e742dcb941fb9bbbec0e7efc3582d9680",
                          "typeString": "literal_string \"Another hash has been submitted by another node.\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "773:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "773:95:0"
                },
                {
                  "assignments": [
                    69,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "storeSuccess",
                      "nameLocation": "939:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "934:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "934:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 77,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "999:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 70,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "956:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "956:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "956:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 73,
                          "name": "FixedPaymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "979:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "956:42:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "933:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79,
                        "name": "storeSuccess",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1020:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e7366657220494e206661696c65642e",
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee2447d7d9d3d2e47ae74b694cab24aa43744a72a0793c27eb7e0d96cb1e7fc9",
                          "typeString": "literal_string \"Transfer IN failed.\""
                        },
                        "value": "Transfer IN failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee2447d7d9d3d2e47ae74b694cab24aa43744a72a0793c27eb7e0d96cb1e7fc9",
                          "typeString": "literal_string \"Transfer IN failed.\""
                        }
                      ],
                      "id": 78,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1012:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:44:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 83,
                        "name": "submitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1134:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 85,
                      "indexExpression": {
                        "id": 84,
                        "name": "_newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1145:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1134:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 86,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1157:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1157:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1134:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:33:0"
                },
                {
                  "expression": {
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 90,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1236:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 94,
                      "indexExpression": {
                        "baseExpression": {
                          "id": 91,
                          "name": "submitters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1245:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                            "typeString": "mapping(string memory => address)"
                          }
                        },
                        "id": 93,
                        "indexExpression": {
                          "id": 92,
                          "name": "_oldHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1256:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1245:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1236:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 95,
                      "name": "FixedPaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1270:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1236:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:52:0"
                },
                {
                  "expression": {
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1341:27:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 98,
                        "name": "submitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1348:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 100,
                      "indexExpression": {
                        "id": 99,
                        "name": "_oldHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "1359:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1348:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 104,
                        "name": "_newHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1393:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 103,
                      "name": "NewEntry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1384:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "EmitStatement",
                  "src": "1379:23:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1420:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1413:11:0"
                }
              ]
            },
            "functionSelector": "93325f63",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AddData",
            "nameLocation": "584:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_oldHash",
                  "nameLocation": "606:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "592:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_newHash",
                  "nameLocation": "630:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "616:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:48:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "663:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "662:6:0"
            },
            "scope": 150,
            "src": "575:857:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1511:384:0",
              "statements": [
                {
                  "assignments": [
                    118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "1633:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1625:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 119,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1625:22:0"
                },
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 120,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "1657:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 121,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1674:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 123,
                      "indexExpression": {
                        "id": 122,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1683:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1674:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1657:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "1657:35:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 126,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1702:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "id": 127,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1711:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1702:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1723:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1702:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:22:0"
                },
                {
                  "assignments": [
                    133,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1739:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 148,
                      "src": "1734:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1734:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1800:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 134,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1763:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1763:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 136,
                          "name": "currentBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1784:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1763:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1763:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1733:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "1830:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204f5554206661696c65642e",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1839:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42f7198caf1bb627a599e94617f48355a4de35e4d29c72560e28fe8997da5718",
                          "typeString": "literal_string \"Transfer OUT failed.\""
                        },
                        "value": "Transfer OUT failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42f7198caf1bb627a599e94617f48355a4de35e4d29c72560e28fe8997da5718",
                          "typeString": "literal_string \"Transfer OUT failed.\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1822:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1822:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1822:40:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1884:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 116,
                  "id": 147,
                  "nodeType": "Return",
                  "src": "1877:11:0"
                }
              ]
            },
            "functionSelector": "69081199",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WithdrawFunds",
            "nameLocation": "1448:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1478:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1462:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1461:26:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 149,
                  "src": "1505:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1504:6:0"
            },
            "scope": 150,
            "src": "1439:456:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 151,
        "src": "58:1839:0",
        "usedErrors": []
      }
    ],
    "src": "31:1866:0"
  },
  "bytecode": "6080604052670de0b6b3a764000060005534801561001c57600080fd5b506107318061002c6000396000f3fe60806040526004361061004a5760003560e01c806327e235e31461004f57806353447bb81461008f57806369081199146100e85780638ed8067e1461011857806393325f6314610120575b600080fd5b34801561005b57600080fd5b5061007c61006a3660046104ee565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561009b57600080fd5b506100d06100aa3660046105b5565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610086565b3480156100f457600080fd5b506101086101033660046104ee565b610133565b6040519015158152602001610086565b6101086101f1565b61010861012e3660046105f2565b610252565b6001600160a01b03811660008181526002602052604080822080549083905590519192909183919083908381818185875af1925050503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b50509050806101e75760405162461bcd60e51b81526020600482015260146024820152732a3930b739b332b91027aaaa103330b4b632b21760611b60448201526064015b60405180910390fd5b5060019392505050565b60008054341461020057600080fd5b33600160405161021d90661a5b9a5d1a585b60ca1b815260070190565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550600190565b600080543410156102a55760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768204554482073656e7420746f207374616b652e00000060448201526064016101de565b6001836040516102b59190610686565b908152604051908190036020019020546bffffffffffffffffffffffff1960609190911b166000036103425760405162461bcd60e51b815260206004820152603060248201527f416e6f74686572206861736820686173206265656e207375626d69747465642060448201526f313c9030b737ba3432b9103737b2329760811b60648201526084016101de565b600080546040513391908381818185875af1925050503d8060008114610384576040519150601f19603f3d011682016040523d82523d6000602084013e610389565b606091505b50509050806103d05760405162461bcd60e51b81526020600482015260136024820152722a3930b739b332b91024a7103330b4b632b21760691b60448201526064016101de565b336001846040516103e19190610686565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000546002600060018760405161042a9190610686565b9081526040805160209281900383019020546001600160a01b031683529082019290925201600090812080549091906104649084906106a2565b909155505060405160019061047a908690610686565b90815260405190819003602001812080546001600160a01b03191690557fd48b1b4ce5d3dbfe01fb33b790a3fdf8d70ea1c364da6e19adcefbaddbc41fff906104c49085906106c8565b60405180910390a15060019392505050565b6001600160a01b03811681146104eb57600080fd5b50565b60006020828403121561050057600080fd5b813561050b816104d6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261053957600080fd5b813567ffffffffffffffff8082111561055457610554610512565b604051601f8301601f19908116603f0116810190828211818310171561057c5761057c610512565b8160405283815286602085880101111561059557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156105c757600080fd5b813567ffffffffffffffff8111156105de57600080fd5b6105ea84828501610528565b949350505050565b6000806040838503121561060557600080fd5b823567ffffffffffffffff8082111561061d57600080fd5b61062986838701610528565b9350602085013591508082111561063f57600080fd5b5061064c85828601610528565b9150509250929050565b60005b83811015610671578181015183820152602001610659565b83811115610680576000848401525b50505050565b60008251610698818460208701610656565b9190910192915050565b600082198211156106c357634e487b7160e01b600052601160045260246000fd5b500190565b60208152600082518060208401526106e7816040850160208701610656565b601f01601f1916919091016040019291505056fea2646970667358221220d121f51f18cee3bbf177615de567e20a1cecc1a443e3af2b308acbc336fd227c64736f6c634300080f0033",
  "bytecodeSha1": "60f3d4acd7e8af5172fc9664fb1fe041fabbfaff",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Unichat",
  "coverageMap": {
    "branches": {
      "0": {
        "Unichat.AddData": {
          "16": [
            696,
            729,
            true
          ],
          "17": [
            781,
            815,
            true
          ],
          "18": [
            1020,
            1032,
            true
          ]
        },
        "Unichat.FundContract": {
          "15": [
            455,
            486,
            true
          ]
        },
        "Unichat.WithdrawFunds": {
          "14": [
            1830,
            1837,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Unichat.AddData": {
          "6": [
            688,
            763
          ],
          "7": [
            773,
            868
          ],
          "8": [
            1012,
            1056
          ],
          "9": [
            1134,
            1167
          ],
          "10": [
            1236,
            1288
          ],
          "11": [
            1341,
            1368
          ],
          "12": [
            1379,
            1402
          ],
          "13": [
            1413,
            1424
          ]
        },
        "Unichat.FundContract": {
          "4": [
            447,
            487
          ],
          "5": [
            498,
            532
          ]
        },
        "Unichat.WithdrawFunds": {
          "0": [
            1657,
            1692
          ],
          "1": [
            1702,
            1724
          ],
          "2": [
            1822,
            1862
          ],
          "3": [
            1877,
            1888
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061004a5760003560e01c806327e235e31461004f57806353447bb81461008f57806369081199146100e85780638ed8067e1461011857806393325f6314610120575b600080fd5b34801561005b57600080fd5b5061007c61006a3660046104ee565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561009b57600080fd5b506100d06100aa3660046105b5565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610086565b3480156100f457600080fd5b506101086101033660046104ee565b610133565b6040519015158152602001610086565b6101086101f1565b61010861012e3660046105f2565b610252565b6001600160a01b03811660008181526002602052604080822080549083905590519192909183919083908381818185875af1925050503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b50509050806101e75760405162461bcd60e51b81526020600482015260146024820152732a3930b739b332b91027aaaa103330b4b632b21760611b60448201526064015b60405180910390fd5b5060019392505050565b60008054341461020057600080fd5b33600160405161021d90661a5b9a5d1a585b60ca1b815260070190565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550600190565b600080543410156102a55760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768204554482073656e7420746f207374616b652e00000060448201526064016101de565b6001836040516102b59190610686565b908152604051908190036020019020546bffffffffffffffffffffffff1960609190911b166000036103425760405162461bcd60e51b815260206004820152603060248201527f416e6f74686572206861736820686173206265656e207375626d69747465642060448201526f313c9030b737ba3432b9103737b2329760811b60648201526084016101de565b600080546040513391908381818185875af1925050503d8060008114610384576040519150601f19603f3d011682016040523d82523d6000602084013e610389565b606091505b50509050806103d05760405162461bcd60e51b81526020600482015260136024820152722a3930b739b332b91024a7103330b4b632b21760691b60448201526064016101de565b336001846040516103e19190610686565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506000546002600060018760405161042a9190610686565b9081526040805160209281900383019020546001600160a01b031683529082019290925201600090812080549091906104649084906106a2565b909155505060405160019061047a908690610686565b90815260405190819003602001812080546001600160a01b03191690557fd48b1b4ce5d3dbfe01fb33b790a3fdf8d70ea1c364da6e19adcefbaddbc41fff906104c49085906106c8565b60405180910390a15060019392505050565b6001600160a01b03811681146104eb57600080fd5b50565b60006020828403121561050057600080fd5b813561050b816104d6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261053957600080fd5b813567ffffffffffffffff8082111561055457610554610512565b604051601f8301601f19908116603f0116810190828211818310171561057c5761057c610512565b8160405283815286602085880101111561059557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156105c757600080fd5b813567ffffffffffffffff8111156105de57600080fd5b6105ea84828501610528565b949350505050565b6000806040838503121561060557600080fd5b823567ffffffffffffffff8082111561061d57600080fd5b61062986838701610528565b9350602085013591508082111561063f57600080fd5b5061064c85828601610528565b9150509250929050565b60005b83811015610671578181015183820152602001610659565b83811115610680576000848401525b50505050565b60008251610698818460208701610656565b9190910192915050565b600082198211156106c357634e487b7160e01b600052601160045260246000fd5b500190565b60208152600082518060208401526106e7816040850160208701610656565b601f01601f1916919091016040019291505056fea2646970667358221220d121f51f18cee3bbf177615de567e20a1cecc1a443e3af2b308acbc336fd227c64736f6c634300080f0033",
  "deployedSourceMap": "58:1839:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;219:43;;;;;;;;;;-1:-1:-1;219:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;548:25:1;;;536:2;521:18;219:43:0;;;;;;;;168:44;;;;;;;;;;-1:-1:-1;168:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;168:44:0;;;;;;-1:-1:-1;;;;;1931:32:1;;;1913:51;;1901:2;1886:18;168:44:0;1767:203:1;1439:456:0;;;;;;;;;;-1:-1:-1;1439:456:0;;;;;:::i;:::-;;:::i;:::-;;;2400:14:1;;2393:22;2375:41;;2363:2;2348:18;1439:456:0;2235:187:1;384:176:0;;;:::i;575:857::-;;;;;;:::i;:::-;;:::i;1439:456::-;-1:-1:-1;;;;;1674:18:0;;1505:4;1674:18;;;:8;:18;;;;;;;;1702:22;;;;1763:40;;1505:4;;1674:18;;1505:4;;1674:18;;;1505:4;1763:40;1505:4;1763:40;1674:18;;1763:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1733:70;;;1830:7;1822:40;;;;-1:-1:-1;;;1822:40:0;;3387:2:1;1822:40:0;;;3369:21:1;3426:2;3406:18;;;3399:30;-1:-1:-1;;;3445:18:1;;;3438:50;3505:18;;1822:40:0;;;;;;;;;-1:-1:-1;1884:4:0;;1439:456;-1:-1:-1;;;1439:456:0:o;384:176::-;431:4;468:18;;455:9;:31;447:40;;;;;;522:10;498;:21;;;;-1:-1:-1;;;3736:22:1;;3783:1;3774:11;;3534:257;498:21:0;;;;;;;;;;;;;;:34;;-1:-1:-1;;;;;498:34:0;;;;-1:-1:-1;;;;;;498:34:0;;;;;;;;;-1:-1:-1;498:34:0;;384:176::o;575:857::-;663:4;711:18;;697:9;696:33;;688:75;;;;-1:-1:-1;;;688:75:0;;3998:2:1;688:75:0;;;3980:21:1;4037:2;4017:18;;;4010:30;4076:31;4056:18;;;4049:59;4125:18;;688:75:0;3796:353:1;688:75:0;789:10;800:8;789:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;781:29:0;;;;;;789:20;781:34;773:95;;;;-1:-1:-1;;;773:95:0;;4900:2:1;773:95:0;;;4882:21:1;4939:2;4919:18;;;4912:30;4978:34;4958:18;;;4951:62;-1:-1:-1;;;5029:18:1;;;5022:46;5085:19;;773:95:0;4698:412:1;773:95:0;934:17;979:18;;956:46;;:10;;979:18;934:17;956:46;934:17;956:46;979:18;956:10;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:69;;;1020:12;1012:44;;;;-1:-1:-1;;;1012:44:0;;5317:2:1;1012:44:0;;;5299:21:1;5356:2;5336:18;;;5329:30;-1:-1:-1;;;5375:18:1;;;5368:49;5434:18;;1012:44:0;5115:343:1;1012:44:0;1157:10;1134;1145:8;1134:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:33;;;;;-1:-1:-1;;;;;1134:33:0;;;;;-1:-1:-1;;;;;1134:33:0;;;;;;1270:18;;1236:8;:30;1245:10;1256:8;1245:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1245:20:0;1236:30;;;;;;;;;;-1:-1:-1;1236:30:0;;;:52;;:30;;-1:-1:-1;1236:52:0;;;;;:::i;:::-;;;;-1:-1:-1;;1348:20:0;;:10;;:20;;1359:8;;1348:20;:::i;:::-;;;;;;;;;;;;;;1341:27;;-1:-1:-1;;;;;;1341:27:0;;;1384:18;;;;1393:8;;1384:18;:::i;:::-;;;;;;;;-1:-1:-1;1420:4:0;;575:857;-1:-1:-1;;;575:857:0:o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:1:o;584:127::-;645:10;640:3;636:20;633:1;626:31;676:4;673:1;666:15;700:4;697:1;690:15;716:719;759:5;812:3;805:4;797:6;793:17;789:27;779:55;;830:1;827;820:12;779:55;866:6;853:20;892:18;929:2;925;922:10;919:36;;;935:18;;:::i;:::-;1010:2;1004:9;978:2;1064:13;;-1:-1:-1;;1060:22:1;;;1084:2;1056:31;1052:40;1040:53;;;1108:18;;;1128:22;;;1105:46;1102:72;;;1154:18;;:::i;:::-;1194:10;1190:2;1183:22;1229:2;1221:6;1214:18;1275:3;1268:4;1263:2;1255:6;1251:15;1247:26;1244:35;1241:55;;;1292:1;1289;1282:12;1241:55;1356:2;1349:4;1341:6;1337:17;1330:4;1322:6;1318:17;1305:54;1403:1;1396:4;1391:2;1383:6;1379:15;1375:26;1368:37;1423:6;1414:15;;;;;;716:719;;;;:::o;1440:322::-;1509:6;1562:2;1550:9;1541:7;1537:23;1533:32;1530:52;;;1578:1;1575;1568:12;1530:52;1618:9;1605:23;1651:18;1643:6;1640:30;1637:50;;;1683:1;1680;1673:12;1637:50;1706;1748:7;1739:6;1728:9;1724:22;1706:50;:::i;:::-;1696:60;1440:322;-1:-1:-1;;;;1440:322:1:o;2427:543::-;2515:6;2523;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;2632:9;2619:23;2661:18;2702:2;2694:6;2691:14;2688:34;;;2718:1;2715;2708:12;2688:34;2741:50;2783:7;2774:6;2763:9;2759:22;2741:50;:::i;:::-;2731:60;;2844:2;2833:9;2829:18;2816:32;2800:48;;2873:2;2863:8;2860:16;2857:36;;;2889:1;2886;2879:12;2857:36;;2912:52;2956:7;2945:8;2934:9;2930:24;2912:52;:::i;:::-;2902:62;;;2427:543;;;;;:::o;4154:258::-;4226:1;4236:113;4250:6;4247:1;4244:13;4236:113;;;4326:11;;;4320:18;4307:11;;;4300:39;4272:2;4265:10;4236:113;;;4367:6;4364:1;4361:13;4358:48;;;4402:1;4393:6;4388:3;4384:16;4377:27;4358:48;;4154:258;;;:::o;4417:276::-;4548:3;4586:6;4580:13;4602:53;4648:6;4643:3;4636:4;4628:6;4624:17;4602:53;:::i;:::-;4671:16;;;;;4417:276;-1:-1:-1;;4417:276:1:o;5463:225::-;5503:3;5534:1;5530:6;5527:1;5524:13;5521:136;;;5579:10;5574:3;5570:20;5567:1;5560:31;5614:4;5611:1;5604:15;5642:4;5639:1;5632:15;5521:136;-1:-1:-1;5673:9:1;;5463:225::o;5693:383::-;5842:2;5831:9;5824:21;5805:4;5874:6;5868:13;5917:6;5912:2;5901:9;5897:18;5890:34;5933:66;5992:6;5987:2;5976:9;5972:18;5967:2;5959:6;5955:15;5933:66;:::i;:::-;6060:2;6039:15;-1:-1:-1;;6035:29:1;6020:45;;;;6067:2;6016:54;;5693:383;-1:-1:-1;;5693:383:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    1897
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x53447BB8 EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x69081199 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x8ED8067E EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x93325F63 EQ PUSH2 0x120 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x4EE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD0 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x5B5 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x1 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0x4EE JUMP JUMPDEST PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x86 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP1 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2A3930B739B332B91027AAAA103330B4B632B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLVALUE EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x21D SWAP1 PUSH7 0x1A5B9A5D1A585B PUSH1 0xCA SHL DUP2 MSTORE PUSH1 0x7 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLVALUE LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204554482073656E7420746F207374616B652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL AND PUSH1 0x0 SUB PUSH2 0x342 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E6F74686572206861736820686173206265656E207375626D697474656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x313C9030B737BA3432B9103737B23297 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x384 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x389 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2A3930B739B332B91024A7103330B4B632B217 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DE JUMP JUMPDEST CALLER PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 DUP8 PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x686 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x464 SWAP1 DUP5 SWAP1 PUSH2 0x6A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH2 0x47A SWAP1 DUP7 SWAP1 PUSH2 0x686 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH32 0xD48B1B4CE5D3DBFE01FB33B790A3FDF8D70EA1C364DA6E19ADCEFBADDBC41FFF SWAP1 PUSH2 0x4C4 SWAP1 DUP6 SWAP1 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x50B DUP2 PUSH2 0x4D6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x554 JUMPI PUSH2 0x554 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x57C JUMPI PUSH2 0x57C PUSH2 0x512 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x595 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EA DUP5 DUP3 DUP6 ADD PUSH2 0x528 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x61D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x629 DUP7 DUP4 DUP8 ADD PUSH2 0x528 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x63F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64C DUP6 DUP3 DUP7 ADD PUSH2 0x528 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x671 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x659 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x698 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x656 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x6E7 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x656 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0x21 CREATE2 0x1F XOR 0xCE 0xE3 0xBB CALL PUSH24 0x615DE567E20A1CECC1A443E3AF2B308ACBC336FD227C6473 PUSH16 0x6C634300080F00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x27E235E3"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x53447BB8"
    },
    "36": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F"
    },
    "40": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x69081199"
    },
    "47": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "51": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8ED8067E"
    },
    "58": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x118"
    },
    "62": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x93325F63"
    },
    "69": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "73": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        1897
      ],
      "op": "REVERT",
      "path": "0"
    },
    "79": {
      "offset": [
        219,
        262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "86": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "offset": [
        219,
        262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C"
    },
    "96": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A"
    },
    "99": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "102": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "105": {
      "fn": null,
      "jump": "i",
      "offset": [
        219,
        262
      ],
      "op": "JUMP",
      "path": "0"
    },
    "106": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "107": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "109": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "111": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "114": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "116": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "117": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "119": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "122": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "JUMP",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "127": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "128": {
      "op": "SWAP1"
    },
    "129": {
      "op": "DUP2"
    },
    "130": {
      "op": "MSTORE"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "133": {
      "op": "ADD"
    },
    "134": {
      "offset": [
        219,
        262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "137": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "138": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SUB",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        219,
        262
      ],
      "op": "RETURN",
      "path": "0"
    },
    "143": {
      "offset": [
        168,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "144": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B"
    },
    "150": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "151": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "153": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "REVERT",
      "path": "0"
    },
    "155": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "156": {
      "op": "POP"
    },
    "157": {
      "offset": [
        168,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0"
    },
    "160": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "163": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "166": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "169": {
      "fn": null,
      "jump": "i",
      "offset": [
        168,
        212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "175": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP4",
      "path": "0"
    },
    "177": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "ADD",
      "path": "0"
    },
    "178": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "179": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "ADD",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP1",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "184": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "187": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP3",
      "path": "0"
    },
    "188": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "ADD",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "ADD",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "203": {
      "op": "SHL"
    },
    "204": {
      "op": "SUB"
    },
    "205": {
      "offset": [
        168,
        212
      ],
      "op": "AND",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "DUP2",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "211": {
      "fn": null,
      "offset": [
        168,
        212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "op": "SWAP1"
    },
    "221": {
      "op": "SWAP2"
    },
    "222": {
      "op": "AND"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "MSTORE"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "offset": [
        168,
        212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86"
    },
    "231": {
      "op": "JUMP"
    },
    "232": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "234": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "236": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF4"
    },
    "239": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "242": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "243": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "REVERT",
      "path": "0"
    },
    "244": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "249": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "252": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "253": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "255": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "258": {
      "fn": "Unichat.WithdrawFunds",
      "jump": "i",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "263": {
      "fn": "Unichat.WithdrawFunds",
      "jump": "i",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "264": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "267": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "268": {
      "op": "SWAP1"
    },
    "269": {
      "op": "ISZERO"
    },
    "270": {
      "op": "ISZERO"
    },
    "271": {
      "op": "DUP2"
    },
    "272": {
      "op": "MSTORE"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "275": {
      "op": "ADD"
    },
    "276": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86"
    },
    "279": {
      "op": "JUMP"
    },
    "280": {
      "fn": "Unichat.FundContract",
      "offset": [
        384,
        560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "281": {
      "fn": "Unichat.FundContract",
      "offset": [
        384,
        560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "284": {
      "fn": "Unichat.FundContract",
      "offset": [
        384,
        560
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1"
    },
    "287": {
      "fn": "Unichat.FundContract",
      "jump": "i",
      "offset": [
        384,
        560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "288": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "292": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "295": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "296": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "298": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F2"
    },
    "301": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        575,
        1432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "302": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "306": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        575,
        1432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "op": "SUB"
    },
    "316": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 0
    },
    "317": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "AND",
      "path": "0"
    },
    "318": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "320": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "321": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP2",
      "path": "0"
    },
    "322": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "323": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "325": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "327": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "328": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "330": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP3",
      "path": "0"
    },
    "332": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "333": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP1",
      "path": "0"
    },
    "334": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "335": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1702,
        1724
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 1
    },
    "336": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1702,
        1724
      ],
      "op": "DUP4",
      "path": "0"
    },
    "337": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1702,
        1724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "338": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1702,
        1724
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "339": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "340": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "341": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "342": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "343": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "344": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "345": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "DUP4",
      "path": "0"
    },
    "346": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "347": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "348": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP4",
      "path": "0"
    },
    "349": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "350": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "DUP4",
      "path": "0"
    },
    "351": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "352": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1505,
        1509
      ],
      "op": "DUP2",
      "path": "0"
    },
    "353": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "354": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP6",
      "path": "0"
    },
    "355": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1674,
        1692
      ],
      "op": "DUP8",
      "path": "0"
    },
    "356": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "GAS",
      "path": "0"
    },
    "357": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "CALL",
      "path": "0"
    },
    "358": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "359": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "360": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "361": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "362": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "363": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "366": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "367": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "EQ",
      "path": "0"
    },
    "368": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "371": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "372": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "374": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "375": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "376": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "377": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "379": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "NOT",
      "path": "0"
    },
    "380": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "382": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "383": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "384": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "AND",
      "path": "0"
    },
    "385": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "386": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "387": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "389": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "390": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "391": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "392": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "393": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "394": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "396": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "398": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "DUP5",
      "path": "0"
    },
    "399": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "ADD",
      "path": "0"
    },
    "400": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "401": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "404": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "405": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "408": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "409": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "410": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1763,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "412": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1733,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "413": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1733,
        1803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "414": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1733,
        1803
      ],
      "op": "POP",
      "path": "0"
    },
    "415": {
      "branch": 14,
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1830,
        1837
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 2
    },
    "416": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "419": {
      "branch": 14,
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "420": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "422": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "423": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "DUP2",
      "path": "0"
    },
    "431": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "434": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "436": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "DUP3",
      "path": "0"
    },
    "437": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "ADD",
      "path": "0"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "443": {
      "op": "DUP3"
    },
    "444": {
      "op": "ADD"
    },
    "445": {
      "op": "MSTORE"
    },
    "446": {
      "op": "PUSH20",
      "value": "0x2A3930B739B332B91027AAAA103330B4B632B217"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "472": {
      "op": "DUP3"
    },
    "473": {
      "op": "ADD"
    },
    "474": {
      "op": "MSTORE"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "477": {
      "op": "ADD"
    },
    "478": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "479": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "481": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "482": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "483": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "484": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "SUB",
      "path": "0"
    },
    "485": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "486": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "487": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1822,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1884,
        1888
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "491": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1884,
        1888
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "492": {
      "fn": "Unichat.WithdrawFunds",
      "offset": [
        1439,
        1895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "493": {
      "op": "POP"
    },
    "494": {
      "op": "POP"
    },
    "495": {
      "op": "POP"
    },
    "496": {
      "fn": "Unichat.WithdrawFunds",
      "jump": "o",
      "offset": [
        1439,
        1895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "497": {
      "fn": "Unichat.FundContract",
      "offset": [
        384,
        560
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "498": {
      "fn": "Unichat.FundContract",
      "offset": [
        431,
        435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "500": {
      "fn": "Unichat.FundContract",
      "offset": [
        468,
        486
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "501": {
      "fn": "Unichat.FundContract",
      "offset": [
        468,
        486
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "502": {
      "fn": "Unichat.FundContract",
      "offset": [
        455,
        464
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "503": {
      "branch": 15,
      "fn": "Unichat.FundContract",
      "offset": [
        455,
        486
      ],
      "op": "EQ",
      "path": "0"
    },
    "504": {
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200"
    },
    "507": {
      "branch": 15,
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "508": {
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "510": {
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "DUP1",
      "path": "0"
    },
    "511": {
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "REVERT",
      "path": "0"
    },
    "512": {
      "fn": "Unichat.FundContract",
      "offset": [
        447,
        487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "513": {
      "fn": "Unichat.FundContract",
      "offset": [
        522,
        532
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "514": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "516": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "518": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "519": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "522": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "523": {
      "op": "PUSH7",
      "value": "0x1A5B9A5D1A585B"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xCA"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "DUP2"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "538": {
      "op": "ADD"
    },
    "539": {
      "op": "SWAP1"
    },
    "540": {
      "op": "JUMP"
    },
    "541": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "DUP2",
      "path": "0"
    },
    "544": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "545": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "547": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "548": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "549": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "DUP2",
      "path": "0"
    },
    "550": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SUB",
      "path": "0"
    },
    "552": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "554": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "ADD",
      "path": "0"
    },
    "555": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        519
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "557": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "565": {
      "op": "SHL"
    },
    "566": {
      "op": "SUB"
    },
    "567": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "568": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "569": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "570": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "AND",
      "path": "0"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "op": "NOT"
    },
    "580": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "581": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "582": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "AND",
      "path": "0"
    },
    "583": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "586": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "OR",
      "path": "0"
    },
    "587": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "588": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "592": {
      "fn": "Unichat.FundContract",
      "offset": [
        498,
        532
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "593": {
      "fn": "Unichat.FundContract",
      "jump": "o",
      "offset": [
        384,
        560
      ],
      "op": "JUMP",
      "path": "0"
    },
    "594": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "Unichat.AddData",
      "offset": [
        663,
        667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "597": {
      "fn": "Unichat.AddData",
      "offset": [
        711,
        729
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "598": {
      "fn": "Unichat.AddData",
      "offset": [
        711,
        729
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "599": {
      "fn": "Unichat.AddData",
      "offset": [
        697,
        706
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "600": {
      "fn": "Unichat.AddData",
      "offset": [
        696,
        729
      ],
      "op": "LT",
      "path": "0"
    },
    "601": {
      "branch": 16,
      "fn": "Unichat.AddData",
      "offset": [
        696,
        729
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "602": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "605": {
      "branch": 16,
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "606": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "608": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "620": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "622": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "DUP3",
      "path": "0"
    },
    "623": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "ADD",
      "path": "0"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "629": {
      "op": "DUP3"
    },
    "630": {
      "op": "ADD"
    },
    "631": {
      "op": "MSTORE"
    },
    "632": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768204554482073656E7420746F207374616B652E000000"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "667": {
      "op": "DUP3"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "op": "MSTORE"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "676": {
      "op": "JUMP"
    },
    "677": {
      "fn": "Unichat.AddData",
      "offset": [
        688,
        763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "678": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        799
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "680": {
      "fn": "Unichat.AddData",
      "offset": [
        800,
        808
      ],
      "op": "DUP4",
      "path": "0"
    },
    "681": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "683": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "684": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "687": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "688": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "689": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "692": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        789,
        809
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "694": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "695": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "696": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "697": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "699": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "700": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "701": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "703": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SUB",
      "path": "0"
    },
    "704": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "706": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "ADD",
      "path": "0"
    },
    "707": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "709": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "710": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "723": {
      "op": "NOT"
    },
    "724": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "726": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "727": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "728": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "SHL",
      "path": "0"
    },
    "730": {
      "fn": "Unichat.AddData",
      "offset": [
        781,
        810
      ],
      "op": "AND",
      "path": "0"
    },
    "731": {
      "fn": "Unichat.AddData",
      "offset": [
        789,
        809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "733": {
      "branch": 17,
      "fn": "Unichat.AddData",
      "offset": [
        781,
        815
      ],
      "op": "SUB",
      "path": "0"
    },
    "734": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x342"
    },
    "737": {
      "branch": 17,
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "738": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "740": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "747": {
      "op": "SHL"
    },
    "748": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "DUP2",
      "path": "0"
    },
    "749": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "752": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "754": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "DUP3",
      "path": "0"
    },
    "755": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "ADD",
      "path": "0"
    },
    "756": {
      "op": "MSTORE"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "761": {
      "op": "DUP3"
    },
    "762": {
      "op": "ADD"
    },
    "763": {
      "op": "MSTORE"
    },
    "764": {
      "op": "PUSH32",
      "value": "0x416E6F74686572206861736820686173206265656E207375626D697474656420"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "799": {
      "op": "DUP3"
    },
    "800": {
      "op": "ADD"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH16",
      "value": "0x313C9030B737BA3432B9103737B23297"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "821": {
      "op": "SHL"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "824": {
      "op": "DUP3"
    },
    "825": {
      "op": "ADD"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "833": {
      "op": "JUMP"
    },
    "834": {
      "fn": "Unichat.AddData",
      "offset": [
        773,
        868
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "835": {
      "fn": "Unichat.AddData",
      "offset": [
        934,
        951
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "837": {
      "fn": "Unichat.AddData",
      "offset": [
        979,
        997
      ],
      "op": "DUP1",
      "path": "0"
    },
    "838": {
      "fn": "Unichat.AddData",
      "offset": [
        979,
        997
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "839": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "841": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "842": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        966
      ],
      "op": "CALLER",
      "path": "0"
    },
    "843": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        966
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "844": {
      "fn": "Unichat.AddData",
      "offset": [
        979,
        997
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "845": {
      "fn": "Unichat.AddData",
      "offset": [
        934,
        951
      ],
      "op": "DUP4",
      "path": "0"
    },
    "846": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP2",
      "path": "0"
    },
    "847": {
      "fn": "Unichat.AddData",
      "offset": [
        934,
        951
      ],
      "op": "DUP2",
      "path": "0"
    },
    "848": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "Unichat.AddData",
      "offset": [
        979,
        997
      ],
      "op": "DUP6",
      "path": "0"
    },
    "850": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        966
      ],
      "op": "DUP8",
      "path": "0"
    },
    "851": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "GAS",
      "path": "0"
    },
    "852": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "CALL",
      "path": "0"
    },
    "853": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "854": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "855": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "856": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "857": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "858": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "861": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP2",
      "path": "0"
    },
    "862": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "EQ",
      "path": "0"
    },
    "863": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x384"
    },
    "866": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "867": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "869": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "870": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "871": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "872": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "874": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "NOT",
      "path": "0"
    },
    "875": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3F"
    },
    "877": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "878": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "ADD",
      "path": "0"
    },
    "879": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "AND",
      "path": "0"
    },
    "880": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP3",
      "path": "0"
    },
    "881": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "ADD",
      "path": "0"
    },
    "882": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "884": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "885": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "886": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP3",
      "path": "0"
    },
    "887": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "888": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "889": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "891": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "893": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "DUP5",
      "path": "0"
    },
    "894": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "ADD",
      "path": "0"
    },
    "895": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "896": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x389"
    },
    "899": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "900": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "901": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "903": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "904": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "905": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "906": {
      "fn": "Unichat.AddData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "907": {
      "fn": "Unichat.AddData",
      "offset": [
        933,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "908": {
      "fn": "Unichat.AddData",
      "offset": [
        933,
        1002
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "Unichat.AddData",
      "offset": [
        933,
        1002
      ],
      "op": "POP",
      "path": "0"
    },
    "910": {
      "branch": 18,
      "fn": "Unichat.AddData",
      "offset": [
        1020,
        1032
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "911": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D0"
    },
    "914": {
      "branch": 18,
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "915": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "917": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "918": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "926": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "929": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "931": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "DUP3",
      "path": "0"
    },
    "932": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "ADD",
      "path": "0"
    },
    "933": {
      "op": "MSTORE"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "938": {
      "op": "DUP3"
    },
    "939": {
      "op": "ADD"
    },
    "940": {
      "op": "MSTORE"
    },
    "941": {
      "op": "PUSH19",
      "value": "0x2A3930B739B332B91024A7103330B4B632B217"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "966": {
      "op": "DUP3"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "975": {
      "op": "JUMP"
    },
    "976": {
      "fn": "Unichat.AddData",
      "offset": [
        1012,
        1056
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "977": {
      "fn": "Unichat.AddData",
      "offset": [
        1157,
        1167
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 9
    },
    "978": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "980": {
      "fn": "Unichat.AddData",
      "offset": [
        1145,
        1153
      ],
      "op": "DUP5",
      "path": "0"
    },
    "981": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "983": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "984": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1"
    },
    "987": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "988": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "992": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        1134,
        1154
      ],
      "op": "JUMP",
      "path": "0"
    },
    "993": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "994": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "995": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "996": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "997": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "999": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "ADD",
      "path": "0"
    },
    "1000": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1002": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1003": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1004": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1005": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SUB",
      "path": "0"
    },
    "1006": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1008": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1010": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1013": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "EXP",
      "path": "0"
    },
    "1014": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1015": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1016": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1023": {
      "op": "SHL"
    },
    "1024": {
      "op": "SUB"
    },
    "1025": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "MUL",
      "path": "0"
    },
    "1026": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "NOT",
      "path": "0"
    },
    "1027": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "AND",
      "path": "0"
    },
    "1028": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1029": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "AND",
      "path": "0"
    },
    "1039": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "MUL",
      "path": "0"
    },
    "1040": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "OR",
      "path": "0"
    },
    "1041": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1042": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1043": {
      "fn": "Unichat.AddData",
      "offset": [
        1134,
        1167
      ],
      "op": "POP",
      "path": "0"
    },
    "1044": {
      "fn": "Unichat.AddData",
      "offset": [
        1270,
        1288
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x0"
    },
    "1046": {
      "fn": "Unichat.AddData",
      "offset": [
        1270,
        1288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1047": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1049": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1051": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1255
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1053": {
      "fn": "Unichat.AddData",
      "offset": [
        1256,
        1264
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1054": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1056": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1057": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42A"
    },
    "1060": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1061": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1062": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "1065": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        1245,
        1265
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1066": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1067": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1068": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1069": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1070": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1072": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1073": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1074": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1076": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1077": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1078": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1079": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SUB",
      "path": "0"
    },
    "1080": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1081": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "ADD",
      "path": "0"
    },
    "1082": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1084": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "op": "SUB"
    },
    "1093": {
      "fn": "Unichat.AddData",
      "offset": [
        1245,
        1265
      ],
      "op": "AND",
      "path": "0"
    },
    "1094": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1095": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1096": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1097": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1098": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "ADD",
      "path": "0"
    },
    "1099": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1100": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1101": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1102": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "ADD",
      "path": "0"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1106": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1107": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1108": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1109": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1110": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1111": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1266
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1113": {
      "op": "SWAP1"
    },
    "1114": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1117": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1118": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1119": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1120": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A2"
    },
    "1123": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        1236,
        1288
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1124": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1126": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1127": {
      "fn": "Unichat.AddData",
      "offset": [
        1236,
        1288
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1128": {
      "op": "POP"
    },
    "1129": {
      "op": "POP"
    },
    "1130": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1132": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1133": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1358
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1135": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1139": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1140": {
      "fn": "Unichat.AddData",
      "offset": [
        1359,
        1367
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1141": {
      "fn": "Unichat.AddData",
      "offset": [
        1359,
        1367
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1142": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x686"
    },
    "1145": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        1348,
        1368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1146": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1148": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1149": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1150": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1152": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1153": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1154": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1155": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1156": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "SUB",
      "path": "0"
    },
    "1157": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1159": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "ADD",
      "path": "0"
    },
    "1160": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1161": {
      "fn": "Unichat.AddData",
      "offset": [
        1348,
        1368
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1162": {
      "fn": "Unichat.AddData",
      "offset": [
        1341,
        1368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1163": {
      "fn": "Unichat.AddData",
      "offset": [
        1341,
        1368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "op": "SUB"
    },
    "1172": {
      "op": "NOT"
    },
    "1173": {
      "fn": "Unichat.AddData",
      "offset": [
        1341,
        1368
      ],
      "op": "AND",
      "path": "0"
    },
    "1174": {
      "fn": "Unichat.AddData",
      "offset": [
        1341,
        1368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "Unichat.AddData",
      "offset": [
        1341,
        1368
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1176": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 12,
      "value": "0xD48B1B4CE5D3DBFE01FB33B790A3FDF8D70EA1C364DA6E19ADCEFBADDBC41FFF"
    },
    "1209": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1210": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C4"
    },
    "1213": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "Unichat.AddData",
      "offset": [
        1393,
        1401
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1215": {
      "fn": "Unichat.AddData",
      "offset": [
        1393,
        1401
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1216": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C8"
    },
    "1219": {
      "fn": "Unichat.AddData",
      "jump": "i",
      "offset": [
        1384,
        1402
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1220": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1221": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1223": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1224": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1225": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1226": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "SUB",
      "path": "0"
    },
    "1227": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1228": {
      "fn": "Unichat.AddData",
      "offset": [
        1384,
        1402
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1229": {
      "op": "POP"
    },
    "1230": {
      "fn": "Unichat.AddData",
      "offset": [
        1420,
        1424
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "1232": {
      "fn": "Unichat.AddData",
      "offset": [
        1420,
        1424
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1233": {
      "fn": "Unichat.AddData",
      "offset": [
        575,
        1432
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1234": {
      "op": "POP"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "fn": "Unichat.AddData",
      "jump": "o",
      "offset": [
        575,
        1432
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1238": {
      "op": "JUMPDEST"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "AND"
    },
    "1249": {
      "op": "DUP2"
    },
    "1250": {
      "op": "EQ"
    },
    "1251": {
      "op": "PUSH2",
      "value": "0x4EB"
    },
    "1254": {
      "op": "JUMPI"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1257": {
      "op": "DUP1"
    },
    "1258": {
      "op": "REVERT"
    },
    "1259": {
      "op": "JUMPDEST"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "jump": "o",
      "op": "JUMP"
    },
    "1262": {
      "op": "JUMPDEST"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "DUP5"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "op": "SLT"
    },
    "1271": {
      "op": "ISZERO"
    },
    "1272": {
      "op": "PUSH2",
      "value": "0x500"
    },
    "1275": {
      "op": "JUMPI"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1278": {
      "op": "DUP1"
    },
    "1279": {
      "op": "REVERT"
    },
    "1280": {
      "op": "JUMPDEST"
    },
    "1281": {
      "op": "DUP2"
    },
    "1282": {
      "op": "CALLDATALOAD"
    },
    "1283": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "1286": {
      "op": "DUP2"
    },
    "1287": {
      "op": "PUSH2",
      "value": "0x4D6"
    },
    "1290": {
      "jump": "i",
      "op": "JUMP"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "SWAP4"
    },
    "1293": {
      "op": "SWAP3"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "op": "POP"
    },
    "1296": {
      "op": "POP"
    },
    "1297": {
      "jump": "o",
      "op": "JUMP"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1309": {
      "op": "MSTORE"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1314": {
      "op": "MSTORE"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1319": {
      "op": "REVERT"
    },
    "1320": {
      "op": "JUMPDEST"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1326": {
      "op": "DUP4"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "SLT"
    },
    "1329": {
      "op": "PUSH2",
      "value": "0x539"
    },
    "1332": {
      "op": "JUMPI"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1335": {
      "op": "DUP1"
    },
    "1336": {
      "op": "REVERT"
    },
    "1337": {
      "op": "JUMPDEST"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "CALLDATALOAD"
    },
    "1340": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1349": {
      "op": "DUP1"
    },
    "1350": {
      "op": "DUP3"
    },
    "1351": {
      "op": "GT"
    },
    "1352": {
      "op": "ISZERO"
    },
    "1353": {
      "op": "PUSH2",
      "value": "0x554"
    },
    "1356": {
      "op": "JUMPI"
    },
    "1357": {
      "op": "PUSH2",
      "value": "0x554"
    },
    "1360": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1363": {
      "jump": "i",
      "op": "JUMP"
    },
    "1364": {
      "op": "JUMPDEST"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1367": {
      "op": "MLOAD"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1370": {
      "op": "DUP4"
    },
    "1371": {
      "op": "ADD"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1374": {
      "op": "NOT"
    },
    "1375": {
      "op": "SWAP1"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "AND"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "AND"
    },
    "1382": {
      "op": "DUP2"
    },
    "1383": {
      "op": "ADD"
    },
    "1384": {
      "op": "SWAP1"
    },
    "1385": {
      "op": "DUP3"
    },
    "1386": {
      "op": "DUP3"
    },
    "1387": {
      "op": "GT"
    },
    "1388": {
      "op": "DUP2"
    },
    "1389": {
      "op": "DUP4"
    },
    "1390": {
      "op": "LT"
    },
    "1391": {
      "op": "OR"
    },
    "1392": {
      "op": "ISZERO"
    },
    "1393": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1396": {
      "op": "JUMPI"
    },
    "1397": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1400": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1403": {
      "jump": "i",
      "op": "JUMP"
    },
    "1404": {
      "op": "JUMPDEST"
    },
    "1405": {
      "op": "DUP2"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "DUP4"
    },
    "1410": {
      "op": "DUP2"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "DUP7"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1415": {
      "op": "DUP6"
    },
    "1416": {
      "op": "DUP9"
    },
    "1417": {
      "op": "ADD"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "GT"
    },
    "1420": {
      "op": "ISZERO"
    },
    "1421": {
      "op": "PUSH2",
      "value": "0x595"
    },
    "1424": {
      "op": "JUMPI"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1427": {
      "op": "DUP1"
    },
    "1428": {
      "op": "REVERT"
    },
    "1429": {
      "op": "JUMPDEST"
    },
    "1430": {
      "op": "DUP4"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1433": {
      "op": "DUP8"
    },
    "1434": {
      "op": "ADD"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "op": "DUP4"
    },
    "1438": {
      "op": "ADD"
    },
    "1439": {
      "op": "CALLDATACOPY"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1444": {
      "op": "DUP6"
    },
    "1445": {
      "op": "DUP4"
    },
    "1446": {
      "op": "ADD"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "DUP1"
    },
    "1450": {
      "op": "SWAP5"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "op": "POP"
    },
    "1456": {
      "op": "SWAP3"
    },
    "1457": {
      "op": "SWAP2"
    },
    "1458": {
      "op": "POP"
    },
    "1459": {
      "op": "POP"
    },
    "1460": {
      "jump": "o",
      "op": "JUMP"
    },
    "1461": {
      "op": "JUMPDEST"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "op": "DUP3"
    },
    "1467": {
      "op": "DUP5"
    },
    "1468": {
      "op": "SUB"
    },
    "1469": {
      "op": "SLT"
    },
    "1470": {
      "op": "ISZERO"
    },
    "1471": {
      "op": "PUSH2",
      "value": "0x5C7"
    },
    "1474": {
      "op": "JUMPI"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1477": {
      "op": "DUP1"
    },
    "1478": {
      "op": "REVERT"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "DUP2"
    },
    "1481": {
      "op": "CALLDATALOAD"
    },
    "1482": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1491": {
      "op": "DUP2"
    },
    "1492": {
      "op": "GT"
    },
    "1493": {
      "op": "ISZERO"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1497": {
      "op": "JUMPI"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1500": {
      "op": "DUP1"
    },
    "1501": {
      "op": "REVERT"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "PUSH2",
      "value": "0x5EA"
    },
    "1506": {
      "op": "DUP5"
    },
    "1507": {
      "op": "DUP3"
    },
    "1508": {
      "op": "DUP6"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "PUSH2",
      "value": "0x528"
    },
    "1513": {
      "jump": "i",
      "op": "JUMP"
    },
    "1514": {
      "op": "JUMPDEST"
    },
    "1515": {
      "op": "SWAP5"
    },
    "1516": {
      "op": "SWAP4"
    },
    "1517": {
      "op": "POP"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "jump": "o",
      "op": "JUMP"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "DUP1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1528": {
      "op": "DUP4"
    },
    "1529": {
      "op": "DUP6"
    },
    "1530": {
      "op": "SUB"
    },
    "1531": {
      "op": "SLT"
    },
    "1532": {
      "op": "ISZERO"
    },
    "1533": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1536": {
      "op": "JUMPI"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1539": {
      "op": "DUP1"
    },
    "1540": {
      "op": "REVERT"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "op": "DUP3"
    },
    "1543": {
      "op": "CALLDATALOAD"
    },
    "1544": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1553": {
      "op": "DUP1"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "GT"
    },
    "1556": {
      "op": "ISZERO"
    },
    "1557": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1560": {
      "op": "JUMPI"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1563": {
      "op": "DUP1"
    },
    "1564": {
      "op": "REVERT"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "PUSH2",
      "value": "0x629"
    },
    "1569": {
      "op": "DUP7"
    },
    "1570": {
      "op": "DUP4"
    },
    "1571": {
      "op": "DUP8"
    },
    "1572": {
      "op": "ADD"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x528"
    },
    "1576": {
      "jump": "i",
      "op": "JUMP"
    },
    "1577": {
      "op": "JUMPDEST"
    },
    "1578": {
      "op": "SWAP4"
    },
    "1579": {
      "op": "POP"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1582": {
      "op": "DUP6"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "CALLDATALOAD"
    },
    "1585": {
      "op": "SWAP2"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "op": "DUP1"
    },
    "1588": {
      "op": "DUP3"
    },
    "1589": {
      "op": "GT"
    },
    "1590": {
      "op": "ISZERO"
    },
    "1591": {
      "op": "PUSH2",
      "value": "0x63F"
    },
    "1594": {
      "op": "JUMPI"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1597": {
      "op": "DUP1"
    },
    "1598": {
      "op": "REVERT"
    },
    "1599": {
      "op": "JUMPDEST"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "op": "PUSH2",
      "value": "0x64C"
    },
    "1604": {
      "op": "DUP6"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "DUP7"
    },
    "1607": {
      "op": "ADD"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x528"
    },
    "1611": {
      "jump": "i",
      "op": "JUMP"
    },
    "1612": {
      "op": "JUMPDEST"
    },
    "1613": {
      "op": "SWAP2"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "op": "SWAP3"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "op": "SWAP3"
    },
    "1619": {
      "op": "SWAP1"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "jump": "o",
      "op": "JUMP"
    },
    "1622": {
      "op": "JUMPDEST"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1625": {
      "op": "JUMPDEST"
    },
    "1626": {
      "op": "DUP4"
    },
    "1627": {
      "op": "DUP2"
    },
    "1628": {
      "op": "LT"
    },
    "1629": {
      "op": "ISZERO"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x671"
    },
    "1633": {
      "op": "JUMPI"
    },
    "1634": {
      "op": "DUP2"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "ADD"
    },
    "1637": {
      "op": "MLOAD"
    },
    "1638": {
      "op": "DUP4"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "MSTORE"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "PUSH2",
      "value": "0x659"
    },
    "1648": {
      "op": "JUMP"
    },
    "1649": {
      "op": "JUMPDEST"
    },
    "1650": {
      "op": "DUP4"
    },
    "1651": {
      "op": "DUP2"
    },
    "1652": {
      "op": "GT"
    },
    "1653": {
      "op": "ISZERO"
    },
    "1654": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1657": {
      "op": "JUMPI"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "DUP5"
    },
    "1661": {
      "op": "DUP5"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "op": "POP"
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "jump": "o",
      "op": "JUMP"
    },
    "1670": {
      "op": "JUMPDEST"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "MLOAD"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x698"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "DUP5"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1682": {
      "op": "DUP8"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "1687": {
      "jump": "i",
      "op": "JUMP"
    },
    "1688": {
      "op": "JUMPDEST"
    },
    "1689": {
      "op": "SWAP2"
    },
    "1690": {
      "op": "SWAP1"
    },
    "1691": {
      "op": "SWAP2"
    },
    "1692": {
      "op": "ADD"
    },
    "1693": {
      "op": "SWAP3"
    },
    "1694": {
      "op": "SWAP2"
    },
    "1695": {
      "op": "POP"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "jump": "o",
      "op": "JUMP"
    },
    "1698": {
      "op": "JUMPDEST"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1701": {
      "op": "DUP3"
    },
    "1702": {
      "op": "NOT"
    },
    "1703": {
      "op": "DUP3"
    },
    "1704": {
      "op": "GT"
    },
    "1705": {
      "op": "ISZERO"
    },
    "1706": {
      "op": "PUSH2",
      "value": "0x6C3"
    },
    "1709": {
      "op": "JUMPI"
    },
    "1710": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1725": {
      "op": "MSTORE"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1730": {
      "op": "REVERT"
    },
    "1731": {
      "op": "JUMPDEST"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "ADD"
    },
    "1734": {
      "op": "SWAP1"
    },
    "1735": {
      "jump": "o",
      "op": "JUMP"
    },
    "1736": {
      "op": "JUMPDEST"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1739": {
      "op": "DUP2"
    },
    "1740": {
      "op": "MSTORE"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "MLOAD"
    },
    "1745": {
      "op": "DUP1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1748": {
      "op": "DUP5"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "MSTORE"
    },
    "1751": {
      "op": "PUSH2",
      "value": "0x6E7"
    },
    "1754": {
      "op": "DUP2"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1757": {
      "op": "DUP6"
    },
    "1758": {
      "op": "ADD"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1761": {
      "op": "DUP8"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "1766": {
      "jump": "i",
      "op": "JUMP"
    },
    "1767": {
      "op": "JUMPDEST"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1770": {
      "op": "ADD"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1773": {
      "op": "NOT"
    },
    "1774": {
      "op": "AND"
    },
    "1775": {
      "op": "SWAP2"
    },
    "1776": {
      "op": "SWAP1"
    },
    "1777": {
      "op": "SWAP2"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "SWAP3"
    },
    "1783": {
      "op": "SWAP2"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6d7e11a700903a9a32573f16192ad7da929b8923",
  "source": "// SPDX-License-Identifier: no\npragma solidity ^0.8.14; \n\ncontract Unichat {\n    // variables\n    uint256 FixedPaymentAmount = 1000000000000000000; // 1 eth in wei\n    mapping(string => address) public submitters; \n    mapping(address => uint256) public balances;\n\n    // events\n    event NewEntry(string _hash);  \n\n    // this needs to be executed before AddData() can be called\n    function FundContract() payable public returns(bool) {\n        require(msg.value == FixedPaymentAmount); \n        submitters['initial'] = msg.sender;\n        return true;\n    }\n        \n\n    function AddData(string memory _oldHash, string memory _newHash) payable public returns(bool) {         \n        require((msg.value) >= FixedPaymentAmount, \"Not enough ETH sent to stake.\");\n        require(bytes20(submitters[_oldHash]) != 0, \"Another hash has been submitted by another node.\");\n        \n        \n        // receive ETH to be staked \n        (bool storeSuccess,) = msg.sender.call{value: FixedPaymentAmount}(\"\");\n        require(storeSuccess, \"Transfer IN failed.\");\n\n        \n        // update submitters with _newHash to msg.sender \n        submitters[_newHash] = msg.sender;\n\n\n        // add the freed up balance to the balances map \n        balances[submitters[_oldHash]] += FixedPaymentAmount;\n\n        // clean up submitters[_oldHash]]\n        delete submitters[_oldHash];\n\n        emit NewEntry(_newHash);\n\n        return true; \n    }\n\n\n    function WithdrawFunds(address payable _address) external returns(bool) {\n        // sends back ETH to anyone whose funds have been freed up after another address submits hashes\n        uint256 currentBalance;\n        currentBalance = balances[_address];\n        balances[_address] = 0;\n       (bool success,) =    \n        _address.call{value: currentBalance}('');\n        \n        require(success, \"Transfer OUT failed.\");\n    \n        return true;\n    }\n}",
  "sourceMap": "58:1839:0:-:0;;;127:19;98:48;;58:1839;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Chat.sol",
  "type": "contract"
}